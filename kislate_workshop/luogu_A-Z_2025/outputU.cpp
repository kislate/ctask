/*
直接输出（output）
【题目描述】
任何正整数都可以以 2 的幂次方形式表示。例如，137 可以写成 27 + 23 + 20。
同时，我们约定使用括号表示次方，即 ab 表示为 a(b)。
因此，137 可以表示为 2(7) + 2(3) + 2(0)。
进一步拆解：
7 可以表示为 22 + 2 + 20（其中 21 用 2 表示），而 3 可以表示为 2 + 20。
因此，最终可以将 137 表示为 2(2(2) + 2 + 2(0)) + 2(2 + 2(0)) + 2(0)。
另一个例子是 1315 = 210 + 28 + 25 + 2 + 1。
因此，1315 最终可以表示为2(2(2+2(0))+2)+2(2(2+2(0)))+2(2(2)+2(0))+2+2(0)。
【输入格式】
一行一个正整数 n。
【输出格式】
符合约定的 n 的 0, 2 表示（在表示中不能有空格）。
【样例 1 输入】
1315
【样例 1 输出】
2(2(2+2(0))+2)+2(2(2+2(0)))+2(2(2)+2(0))+2+2(0)
【子任务】
对于 100% 的数据，1 ≤n ≤2 ×104。
*/

#include <iostream>
#include <string>
using namespace std;

string binary_fun(int n)
{
    if (n == 0)
        return "0";
    if(n == 1)
        return "2(0)";
    if(n == 2)
        return "2";
    string ret = "";
    int i = 0;
    bool flag = false;
    while(n)//101001001001010101010111，从右侧开始
    {
        if(n % 2)
        {
            if(flag)
            {
                ret = "+" + ret; 
            }
            if(i == 1)
            {
                ret = "2" + ret;
            }
            else if(i == 0)
            {
                ret = "2(0)" + ret;
            }
            else
            {
                ret = "2(" + binary_fun(i) + ")" + ret;
            }
            flag = true;
        }
        n >>= 1;
        i++;
    }
    return ret;
}
int main()
{
    int n;
    cin >> n;
    cout << binary_fun(n) << endl;
    return 0;
}
